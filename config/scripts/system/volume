#!/usr/bin/env bash

DIR="$HOME/.config/bspwm/assets/Volume"

VOLUME_STEPS=5
MAX_VOLUME=100

function get_volume {
  pactl list sinks | grep -A 15 '^[[:space:]]Volume:' | grep -Po '[0-9]+%' | head -1 | grep -oP '[0-9]+'
}

function get_volume_icon {
  volume=$(get_volume)

  if [ "$(pactl list sinks | awk '/Mute:/ {print $2}')" = "yes" ]; then
    echo "$DIR/mute.svg"
  elif [ "$volume" -eq 0 ]; then
    echo "$DIR/mute.svg"
  elif [ "$volume" -lt 30 ]; then
    echo "$DIR/low_volume.svg"
  elif [ "$volume" -lt 70 ]; then
    echo "$DIR/medium_volume.svg"
  else
    echo "$DIR/high_volume.svg"
  fi
}

function send_notification {
  volume=$(get_volume)
  icon=$(get_volume_icon $volume)

  # Generar una barra de progreso con bloques de 10%
  block_count=$(($volume * 10 / 100))
  progress_bar=$(printf '▉%.0s' $(seq 1 $block_count))

  # Configurar la notificación con barra de progreso
  dunstify \
    -i $icon \
    -r 5555 \
    -u normal \
    -h string:x-dunst-stack-tag:volume_notification \
    "Volumen" \
    -h int:value:$volume \
    -h string:synchronous:volume_notification \
    -h string:x-dunst-stack-tag:volume_notification \
    -h string:x-dunst-stack-tag:volume_notification \
    -h string:percentage:"$progress_bar"
}

function increase_volume {
  current_volume=$(get_volume)
  target_volume=$((current_volume + VOLUME_STEPS))
  new_volume=$(($target_volume > $MAX_VOLUME ? $MAX_VOLUME : $target_volume))

  pactl set-sink-volume @DEFAULT_SINK@ ${new_volume}%
  send_notification
}

function decrease_volume {
  current_volume=$(get_volume)
  new_volume=$((current_volume - VOLUME_STEPS))
  new_volume=$(($new_volume < 0 ? 0 : $new_volume))

  pactl set-sink-volume @DEFAULT_SINK@ ${new_volume}%
  send_notification
}

function toggle_mute {
  pactl set-sink-mute @DEFAULT_SINK@ toggle
  send_notification
}

case $1 in
  RaiseVolume)
    # Aumentar volumen 5%
    increase_volume
    ;;

  LowerVolume)
    # Reducir volumen 5%
    decrease_volume
    ;;

  Mute)
    # Alternar mute
    toggle_mute
    ;;
esac
