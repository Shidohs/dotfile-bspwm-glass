#!/usr/bin/env bash

# Verificar si xdpyinfo e imagemagick están instalados
if ! command -v xdpyinfo > /dev/null 2>&1; then
    dunstify "Paquete faltante" "Por favor, instala el paquete xorg-xdpyinfo para continuar" -u critical
    exit 1
elif ! command -v convert > /dev/null 2>&1; then
	dunstify "Paquete faltante" "Por favor, instala el paquete imagemagick para continuar" -u critical
    exit 1
fi

# Establecer algunas variables
wall_dir="${HOME}/Wallpaper"
cacheDir="${HOME}/.cache/wall/${RICETHEME}"
rofi_command="rofi -dmenu -theme ${HOME}/.config/bspwm/scripts/WallSelect.rasi -theme-str ${rofi_override}"

monitor_res=$(xdpyinfo | grep dimensions | awk '{print $2}' | cut -d 'x' -f1)
monitor_scale=$(xdpyinfo | grep -oP "resolution:.*" | awk '{print $2}' | cut -d 'x' -f1)
monitor_res=$(( monitor_res * 17 / monitor_scale ))
rofi_override="element-icon{size:${monitor_res}px;border-radius:0px;}"

# Crear directorio de caché si no existe
if [ ! -d "${cacheDir}" ] ; then
        mkdir -p "${cacheDir}"
fi

# Convertir imágenes en el directorio y guardar en el directorio de caché
for imagen in "$wall_dir"/*.{jpg,jpeg,png,webp}; do
	if [ -f "$imagen" ]; then
		nombre_archivo=$(basename "$imagen")
			if [ ! -f "${cacheDir}/${nombre_archivo}" ] ; then
				convert -strip "$imagen" -thumbnail 500x500^ -gravity center -extent 500x500 "${cacheDir}/${nombre_archivo}"
			else
                # Si la imagen ya existe en caché, asegurarse de que se actualice si es más reciente que la versión en caché
                if [ "$imagen" -nt "${cacheDir}/${nombre_archivo}" ]; then
                    convert -strip "$imagen" -thumbnail 500x500^ -gravity center -extent 500x500 "${cacheDir}/${nombre_archivo}"
                fi
            fi
    fi
done

# Lanzar rofi
wall_selection=$(find "${wall_dir}" -type f \( -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.png" -o -iname "*.webp" \) -exec basename {} \; | sort | while read -r A ; do  echo -en "$A\x00icon\x1f""${cacheDir}"/"$A\n" ; done | $rofi_command)

# Establecer fondo de pantalla
[[ -n "$wall_selection" ]] || exit 1
feh --no-fehbg --bg-fill "${wall_dir}"/"${wall_selection}"
exit 0
