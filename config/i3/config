# Establecer la tecla mod (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4

include startup
#include rules/apps
include keys/*
include bar
#include layout

# Establecer diseño de escritorio predeterminado (predeterminado es en mosaico)
#|workspace_layout tabbed <stacking|tabbed>

# Configurar estilo de borde <normal|1pixel|pixel xx|none|pixel>
new_window pixel 2
new_float pixel 2

# Ocultar bordes de borde
hide_edge_borders none
default_border          none
default_floating_border none

# Cambiar bordes
bindsym $mod+u border pixel 2
bindsym $mod+y border pixel 2
bindsym $mod+n border pixel 2

# Fuente para los títulos de las ventanas. También se usará en la barra a menos que se use una fuente diferente
# en el bloque de barra {} a continuación.
#font xft:Hack 10
font pango:Mono Sans Regular 11

# Utilizar Ratón+$mod para arrastrar ventanas flotantes
floating_modifier $mod

# Configuración de diseño predeterminado para los contenedores
set $i3l spiral 0.6 to workspace $terminal
#workspace_layout 


################################################################################################
## Sección de sonido - NO EDITAR si deseas actualizar automáticamente Alsa -> Pulseaudio después! ##
################################################################################################

bindsym $mod+Ctrl+m exec terminal -e 'alsamixer'
#exec --no-startup-id pulseaudio
#exec --no-startup-id pa-applet
#bindsym $mod+Ctrl+m exec pavucontrol

################################################################################################


for_window [urgent=latest] focus
tiling_drag modifier titlebar


# Colors set from ~/.Xresources
set_from_resource       $background     background
set_from_resource       $foreground     foreground
set_from_resource       $color0         color0
set_from_resource       $color1         color1
set_from_resource       $color2         color2
set_from_resource       $color3         color3
set_from_resource       $color4         color4
set_from_resource       $color5         color5
set_from_resource       $color6         color6
set_from_resource       $color7         color7
set_from_resource       $color8         color8
set_from_resource       $color9         color9
set_from_resource       $color10        color10
set_from_resource       $color11        color11
set_from_resource       $color12        color12
set_from_resource       $color13        color13
set_from_resource       $color14        color14
set_from_resource       $color15        color15

# hide/unhide i3status bar
bindsym $mod+m bar mode toggle

# Theme colors
# class                 border          backgr.         text            indic.          child_border
# My colors
client.background       $background

client.focused          $foreground     $background     $foreground     $background             $background     
client.unfocused        $foreground     $background     $foreground     $background             $background
client.focused_inactive $foreground     $background     $foreground     $background             $background
client.urgent           $foreground     $background     $foreground     $background             $background
client.placeholder      $foreground     $background     $foreground     $background             $background


#############################
### settings for i3-gaps: ###
#############################

# Set inner/outer gaps
# Change gap size
#gaps outer 5
#gaps inner 24
gaps inner 8
gaps outer 8
#gaps left 220
#gaps top 83

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}


